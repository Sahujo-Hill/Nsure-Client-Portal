@using NsureProject.Pages
@inject AuthenticationStateProvider AuthenticationStateProvider
@using Microsoft.AspNetCore.Components.Authorization

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">

          <div class="top-row ps-3 navbar navbar-dark">
             <div class="iconMenuLogo">
                 @if (!@IconMenuActive)
                {
                    <a class="navbar-brand companyLogoNSmall" href="">N</a>
                    <a class="navbar-brand companyLogoSureSmall" href="">sure</a>
                }
                 <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
                     <span class="navbar-toggler-icon"></span>
                 </button>
             </div>
         </div>

        <AuthorizeView>
            <NotAuthorized>
                
                @code {
                    protected override async void OnInitialized()
                    {
                        ToggleIconMenu();
                    }
                }

            </NotAuthorized>

            <Authorized>
            <div class="nav-item px-3">
                <NavLink style="margin-top: 10px" class="nav-link topNavLink" href="policySelect" Match="NavLinkMatch.All">
                    <span  class="oi oi-align-center" aria-hidden="true"></span>
                        @if (!@IconMenuActive)
                        {
                            <label>My Policies</label>
                        }
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="myCar" Match="NavLinkMatch.All">
                    <span class="oi oi-key" aria-hidden="true"></span>
                        @if (!@IconMenuActive)
                        {
                            <label>My Car</label>
                        }
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="myHome" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span>
                        @if (!@IconMenuActive)
                        {
                            <label>My Home</label>
                        }
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="myLife" Match="NavLinkMatch.All">
                    <span class="oi oi-heart" aria-hidden="true"></span>
                        @if (!@IconMenuActive)
                        {
                            <label>My Life</label>
                        }
                </NavLink>
            </div>

            <div class="bottom-row">
                <div class="icon-menu-arrow">
                    @if (!@IconMenuActive)
                    {
                        <button id="menuCollapse" class="oi oi-chevron-left" style="color: white;" @onclick="ToggleIconMenu"></button>
                    }
                    else
                    {
                        <button id="menuCollapse" class="oi oi-chevron-right" style="color: white;" @onclick="ToggleIconMenu"></button>
                    }
                </div>
            </div>

            </Authorized>
        </AuthorizeView>
        


    </nav>
</div>

@code {
    private bool IconMenuActive { get; set; } = false;

    [Parameter]
    public EventCallback<bool> ShowIconMenu { get; set; }

    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task ToggleIconMenu()
    {
        IconMenuActive = !IconMenuActive;
        await ShowIconMenu.InvokeAsync(IconMenuActive);
    }

}
